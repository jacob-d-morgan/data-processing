function iceCore = makeIceCoreDataset(masterSheet,iceCoreID)
% MAKEICECOREDATASET compiles sample means from the  master sheet into a
% dataset of replicate measurements from an ice core.
%   ICECORE = MAKEICECOREDATASET(MASTERSHEET,ICECOREID) compiles samples in
%   the master sheet that are tagged with ICECOREID into a dataset of
%   replicate measurements, sorted by depth.
%
% -------------------------------------------------------------------------

%% Parse Inputs

narginchk(2,2)

if ~isstruct(masterSheet)
    error('The first input must be a structure, a "Master Sheet" generated by makeMasterSheet')
end

%% Identify the relevant aliquots and their replicates
% Use only the aliquots that have 'SPICE' in the filename and than have a
% decimal point (indicating a bottom depth) in the ID1 string.

iIceCore = contains(masterSheet.metadata.filename(:,1,1),iceCoreID) & contains(masterSheet.metadata.ID1(:,1,1),'.');

% Split ID1 into bottom depth and replicate id
exp2match = '(?<depth>\d*.\d*)\s*(?<rep>\w*)';
tokens = regexp(masterSheet.metadata.ID1(iIceCore,1,1),exp2match,'names');

bottomDepth = double(cellfun(@(x) x.depth,tokens));

%% Assemble Tables of Data
% Arrange the data in a table using the bottom depth as a grouping variable
% to identify replicates.

% Calculate the Sample Means for SPC
delta_names = string(masterSheet.deltas_corr.Properties.VariableNames);
aliquotMeans = varfun(@(x) mean(x,[3 4]),(masterSheet.deltas_corr(iIceCore,:)));
aliquotMeans.Properties.VariableNames = delta_names;

% Identify Replicate Samples
iceCore.metadata = table;
[grp,iceCore.metadata.bottomDepth] = findgroups(bottomDepth);

iceCore.metadata.numRepsNoRej = nan(max(grp),1);
for ii_grp = grp'
    iceCore.metadata.numRepsNoRej(ii_grp) = sum(grp==ii_grp);
end    

% Build Tables of Sample Replicates and Means
iceCore.sampleRepsNoRej = table;
iceCore.sampleMeansNoRej = table;
for ii_delta = delta_names
    iceCore.sampleRepsNoRej.(ii_delta) = nan(max(grp),max(iceCore.metadata.numRepsNoRej));
    for jj_grp = grp'   
        temp = aliquotMeans{grp==jj_grp,ii_delta};
        iceCore.sampleRepsNoRej.(ii_delta)(jj_grp,1:length(temp)) = temp';
    end
end

for ii_delta = delta_names
    iceCore.sampleMeansNoRej.(ii_delta) = splitapply(@mean,aliquotMeans.(ii_delta),grp);
end

end %end makeIceCoreDataset